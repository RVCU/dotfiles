!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
<C-g>	vimrc.d/commands.vim	/^nmap <C-g> :TagbarToggle<CR>$/;"	m
<C-n>	vimrc.d/commands.vim	/^nmap <C-n> :NERDTreeToggle<CR>$/;"	m
<S-TAB>	vimrc.d/coc.vim	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<TAB>	vimrc.d/coc.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<leader>f	vimrc.d/coc.vim	/^nmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>f	vimrc.d/coc.vim	/^vmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>g	vimrc.d/CommandT.vim	/^nmap <silent> <leader>g <Plug>(CommandTTag)$/;"	m
<leader>nr	vimrc.d/commands.vim	/^nnoremap <leader>nr :set nu! relativenumber!<CR>$/;"	m
<leader>rn	vimrc.d/coc.vim	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
BuildCommandLineForJava	vimrc.d/commands.vim	/^function BuildCommandLineForJava(...)$/;"	f
BuildJavaModule	vimrc.d/java.vim	/^command! -nargs=* BuildJavaModule call Build_Java_Module(<f-args>)$/;"	c
Build_Java_Module	vimrc.d/java.vim	/^function Build_Java_Module (module_name)$/;"	f
Create_Test_XML	vimrc.d/commands.vim	/^function Create_Test_XML (class_name, method_name)$/;"	f
DBG	vimrc.d/commands.vim	/^command! -nargs=* DBG call DebugJava(<f-args>)$/;"	c
DebugJava	vimrc.d/commands.vim	/^command! -nargs=* DebugJava call DebugTestNG(<f-args>)$/;"	c
DebugJava	vimrc.d/commands.vim	/^function DebugJava(...)$/;"	f
EmojiCheckMark	vimrc.d/emojis.vim	/^command! EmojiCheckMark  :normal i<C-v>U2714$/;"	c
EmojiInProgress	vimrc.d/emojis.vim	/^command! EmojiInProgress :normal i<C-v>U25B6$/;"	c
EmojiNotDone	vimrc.d/emojis.vim	/^command! EmojiNotDone    :normal i<C-v>U26AA$/;"	c
GetPackageName	vimrc.d/commands.vim	/^function GetPackageName()$/;"	f
Install_Coc	vimrc.d/coc.vim	/^function! Install_Coc$/;"	f
Is_Test	vimrc.d/commands.vim	/^function Is_Test() " returns true if has @Test annotation in 3 lines above class$/;"	f
JavaRun	vimrc.d/commands.vim	/^command! -nargs=* JavaRun call Run_Java_Class_Main(<f-args>)$/;"	c
K	vimrc.d/coc.vim	/^nnoremap <silent> K :call <SID>show_documentation()<CR>$/;"	m
ParseJavaCli	vimrc.d/commands.vim	/^function ParseJavaCli(...)$/;"	f
Run_Java_Class_Main	vimrc.d/commands.vim	/^function Run_Java_Class_Main(...)$/;"	f
[c	vimrc.d/coc.vim	/^nmap <silent> [c <Plug>(coc-diagnostic-prev)$/;"	m
]c	vimrc.d/coc.vim	/^nmap <silent> ]c <Plug>(coc-diagnostic-next)$/;"	m
check_arguments	git-identity	/^check_arguments () {$/;"	f
check_back_space	vimrc.d/coc.vim	/^function! s:check_back_space() abort$/;"	f
define_gpg	git-identity	/^define_gpg () {$/;"	f
define_identity	git-identity	/^define_identity () {$/;"	f
define_ssh	git-identity	/^define_ssh () {$/;"	f
env_ssh_command	git-identity	/^env_ssh_command () {$/;"	f
format_identity	git-identity	/^format_identity () {$/;"	f
format_raw_identity	git-identity	/^format_raw_identity () {$/;"	f
g:airline_theme	vimrc.d/common.vim	/^let g:airline_theme='molokai'$/;"	v
g:vebugger_leader	vimrc.d/CommandT.vim	/^let g:vebugger_leader='<Leader>d'$/;"	v
g:vebugger_leader	vimrc.d/debug.vim	/^let g:vebugger_leader='<Leader>d'$/;"	v
g:vebugger_use_tags	vimrc.d/CommandT.vim	/^let g:vebugger_use_tags=1$/;"	v
g:vebugger_use_tags	vimrc.d/debug.vim	/^let g:vebugger_use_tags=1 " Lets jdb use tags to find source files$/;"	v
g:vim_tags_auto_generate	vimrc.d/tags.vim	/^let g:vim_tags_auto_generate = 1$/;"	v
gd	vimrc.d/coc.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
get_current_settings	git-identity	/^get_current_settings () {$/;"	f
get_ssh_command	git-identity	/^get_ssh_command () {$/;"	f
gi	vimrc.d/coc.vim	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gr	vimrc.d/coc.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
gy	vimrc.d/coc.vim	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
list_identities	git-identity	/^list_identities () {$/;"	f
list_raw_identities	git-identity	/^list_raw_identities () {$/;"	f
lookup	git-identity	/^lookup () {$/;"	f
print_current_identity	git-identity	/^print_current_identity () {$/;"	f
print_raw_identity	git-identity	/^print_raw_identity () {$/;"	f
remove_identity	git-identity	/^remove_identity () {$/;"	f
show_documentation	vimrc.d/coc.vim	/^function! s:show_documentation()$/;"	f
templates	vimrc.d/sh.vim	/^  augroup templates            $/;"	a
update_identity	git-identity	/^update_identity () {$/;"	f
use_identity	git-identity	/^use_identity () {$/;"	f
